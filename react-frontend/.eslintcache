[{"/Users/alex/workspace/tksh/react-frontend/src/index.tsx":"1","/Users/alex/workspace/tksh/react-frontend/src/reportWebVitals.ts":"2","/Users/alex/workspace/tksh/react-frontend/src/service-worker.ts":"3","/Users/alex/workspace/tksh/react-frontend/src/app/App.tsx":"4","/Users/alex/workspace/tksh/react-frontend/src/app/Home.tsx":"5","/Users/alex/workspace/tksh/react-frontend/src/shared/service/client.ts":"6","/Users/alex/workspace/tksh/react-frontend/src/shared/hooks/GetReports.ts":"7","/Users/alex/workspace/tksh/react-frontend/src/rpc/TkshServiceClientPb.ts":"8","/Users/alex/workspace/tksh/react-frontend/src/components/Snackbar.tsx":"9","/Users/alex/workspace/tksh/react-frontend/src/app/DashboardLayout.tsx":"10","/Users/alex/workspace/tksh/react-frontend/src/rpc/tksh_pb.js":"11","/Users/alex/workspace/tksh/react-frontend/src/components/Table/index.tsx":"12","/Users/alex/workspace/tksh/react-frontend/src/app/DashboardBar.tsx":"13","/Users/alex/workspace/tksh/react-frontend/src/components/Table/Table.tsx":"14","/Users/alex/workspace/tksh/react-frontend/src/components/Table/TooltipCell.tsx":"15","/Users/alex/workspace/tksh/react-frontend/src/components/Table/TableToolbar.tsx":"16","/Users/alex/workspace/tksh/react-frontend/src/components/Table/TableStyles.tsx":"17","/Users/alex/workspace/tksh/react-frontend/src/components/Table/TablePagination.tsx":"18","/Users/alex/workspace/tksh/react-frontend/src/components/Table/ResizeHandle.tsx":"19","/Users/alex/workspace/tksh/react-frontend/src/components/Table/FilterChipBar.tsx":"20","/Users/alex/workspace/tksh/react-frontend/src/components/Table/DebugDump.tsx":"21","/Users/alex/workspace/tksh/react-frontend/src/components/Table/filters/index.ts":"22","/Users/alex/workspace/tksh/react-frontend/src/components/Table/FilterPage.tsx":"23","/Users/alex/workspace/tksh/react-frontend/src/components/Table/ColumnHidePage.tsx":"24","/Users/alex/workspace/tksh/react-frontend/src/components/Table/filters/numericFilter.tsx":"25","/Users/alex/workspace/tksh/react-frontend/src/components/Table/filters/fuzzyFilter.tsx":"26","/Users/alex/workspace/tksh/react-frontend/src/components/Loader/index.tsx":"27","/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/index.ts":"28","/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/object.ts":"29","/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/splitInitial.ts":"30","/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/validators.ts":"31","/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/useDebounce.tsx":"32","/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/useLocalStorage.tsx":"33","/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/aggregators.tsx":"34"},{"size":972,"mtime":1608574986053,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1608566313324,"results":"37","hashOfConfig":"36"},{"size":6025,"mtime":1608569227050,"results":"38","hashOfConfig":"36"},{"size":303,"mtime":1608568279994,"results":"39","hashOfConfig":"36"},{"size":3477,"mtime":1608574842669,"results":"40","hashOfConfig":"36"},{"size":241,"mtime":1608567846256,"results":"41","hashOfConfig":"36"},{"size":1160,"mtime":1608573165583,"results":"42","hashOfConfig":"36"},{"size":1999,"mtime":1608567530712,"results":"43","hashOfConfig":"36"},{"size":3833,"mtime":1608573648628,"results":"44","hashOfConfig":"36"},{"size":4112,"mtime":1608568598776,"results":"45","hashOfConfig":"36"},{"size":44264,"mtime":1608567530712,"results":"46","hashOfConfig":"36"},{"size":24,"mtime":1603259773114,"results":"47","hashOfConfig":"36"},{"size":3177,"mtime":1608568776278,"results":"48","hashOfConfig":"36"},{"size":9583,"mtime":1608575237729,"results":"49","hashOfConfig":"36"},{"size":762,"mtime":1603259773113,"results":"50","hashOfConfig":"36"},{"size":6849,"mtime":1603259773113,"results":"51","hashOfConfig":"36"},{"size":3775,"mtime":1603259773113,"results":"52","hashOfConfig":"36"},{"size":1912,"mtime":1603259773113,"results":"53","hashOfConfig":"36"},{"size":524,"mtime":1603259773112,"results":"54","hashOfConfig":"36"},{"size":2129,"mtime":1603259773112,"results":"55","hashOfConfig":"36"},{"size":1225,"mtime":1603259773112,"results":"56","hashOfConfig":"36"},{"size":62,"mtime":1603259773114,"results":"57","hashOfConfig":"36"},{"size":2588,"mtime":1603259773112,"results":"58","hashOfConfig":"36"},{"size":2413,"mtime":1603259773112,"results":"59","hashOfConfig":"36"},{"size":1227,"mtime":1603259773114,"results":"60","hashOfConfig":"36"},{"size":421,"mtime":1603259773113,"results":"61","hashOfConfig":"36"},{"size":1146,"mtime":1603259773111,"results":"62","hashOfConfig":"36"},{"size":178,"mtime":1603259773122,"results":"63","hashOfConfig":"36"},{"size":2351,"mtime":1603259773122,"results":"64","hashOfConfig":"36"},{"size":170,"mtime":1601136824754,"results":"65","hashOfConfig":"36"},{"size":526,"mtime":1601292528693,"results":"66","hashOfConfig":"36"},{"size":1341,"mtime":1603259773122,"results":"67","hashOfConfig":"36"},{"size":1187,"mtime":1603259773123,"results":"68","hashOfConfig":"36"},{"size":4896,"mtime":1603259773122,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1onh66y",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alex/workspace/tksh/react-frontend/src/index.tsx",[],["148","149"],"/Users/alex/workspace/tksh/react-frontend/src/reportWebVitals.ts",[],"/Users/alex/workspace/tksh/react-frontend/src/service-worker.ts",[],"/Users/alex/workspace/tksh/react-frontend/src/app/App.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/app/Home.tsx",["150","151","152","153"],"import React, {useEffect, useState} from 'react'\n// import cx from 'classnames'\nimport {CircularProgress, Grid, makeStyles} from '@material-ui/core'\n\nimport DashboardLayout, {useStyles} from './DashboardLayout'\nimport {Table} from '../components/Table'\nimport SnackBar from '../components/Snackbar'\nimport {useGetReports} from \"../shared/hooks/GetReports\";\nimport {grpcClient} from \"../shared/service/client\";\n\nexport interface DashboardTableProps {\n}\n\nconst useTableStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset'\n        }\n    }\n})\n\nfunction formatMoney(amount: number, decimalCount = 2, decimal = \".\", thousands = \",\") {\n    try {\n        decimalCount = Math.abs(decimalCount)\n        decimalCount = isNaN(decimalCount) ? 2 : decimalCount\n\n        const negativeSign = amount < 0 ? \"-\" : \"\"\n        let stringAmount = amount.toString()\n\n        let i = parseInt(stringAmount = Math.abs(Number(amount) || 0).toFixed(decimalCount))\n        let iString = i.toString();\n        let j = (iString.length > 3) ? iString.length % 3 : 0;\n\n        return negativeSign + (j ? iString.substr(0, j) + thousands : '') + iString.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n        console.log(e)\n    }\n};\n\n\nconst Dashboard: React.FunctionComponent<DashboardTableProps> = () => {\n    useEffect(() => {\n        document.title = 'Laporan Perbaikan Kaca'\n    }, [])\n    const [errMsg, setErrMsg] = useState('')\n    const classes = useTableStyles()\n    const {isLoading, allReports, errorMsg} = useGetReports(grpcClient.serviceClient)\n\n    const columns = [\n        {\n            Header: 'Tanggal',\n            accessor: 'tanggal',\n            fillter: 'fuzzyFilter',\n        },\n        {\n            Header: 'Jumlah',\n            accessor: 'jumlah',\n            align: 'right',\n        }\n    ]\n\n    if (isLoading) {\n        return (\n            <React.Fragment>\n                <div style={{display: 'flex', justifyContent: 'center'}}>\n                    <CircularProgress/>\n                </div>\n            </React.Fragment>\n        )\n    } else if (errorMsg != '') {\n        return (\n            <React.Fragment>\n                <SnackBar\n                    variant='error'\n                    message={errMsg}\n                    setMessage={(message) => setErrMsg(errMsg)}\n                />\n            </React.Fragment>\n        )\n    }\n\n    function mapListDataRow(): any[] {\n        let transferRecord: any[] = []\n        if (\n            allReports !== undefined &&\n            allReports !== null\n        ) {\n            // eslint-disable-next-line array-callback-return\n            allReports.map((rep) => {\n                transferRecord.push({\n                    tanggal: rep.getTanggal()?.toDate().toDateString() + ' ' + rep.getTanggal()?.toDate().toTimeString(),\n                    jumlah: formatMoney(rep.getTransfer(), 2, \",\", \".\")\n                })\n            })\n        }\n\n        return transferRecord\n    }\n\n\n    const dashboardPage = () => (\n        <React.Fragment>\n            <Grid item lg={12} xs={12}>\n                <Table\n                    name='Data Transfer'\n                    columns={columns}\n                    data={mapListDataRow()}\n                />\n            </Grid>\n        </React.Fragment>\n    )\n\n    return <DashboardLayout children={dashboardPage()}/>\n}\n\nexport default Dashboard\n","/Users/alex/workspace/tksh/react-frontend/src/shared/service/client.ts",[],"/Users/alex/workspace/tksh/react-frontend/src/shared/hooks/GetReports.ts",["154"],"import {useState, useCallback} from 'react'\nimport {TkshServiceClient} from '../../rpc/TkshServiceClientPb'\nimport {ReportAll, ReportRequest, TransferRecord} from '../../rpc/tksh_pb'\n\nexport const useGetReports = (client: TkshServiceClient) => {\n    const [allReports, setAllReports] = useState<TransferRecord[]>()\n    const [isLoading, setLoading] = useState<boolean>(true)\n    const [errorMsg, setErrorMsg] = useState<string>('')\n\n    useCallback(() => {\n        setLoading(true)\n        return new Promise<TransferRecord[]>(async (resolve, reject) => {\n            try {\n                const reportReq: ReportRequest = new ReportRequest()\n                reportReq.setSortBy(\"Tanggal\")\n                const {getReportItemsList} = await client.getReport(reportReq, null)\n                setAllReports(getReportItemsList)\n                setLoading(false)\n                resolve(getReportItemsList())\n            } catch (e) {\n                setLoading(false)\n                setErrorMsg(e.toString)\n                reject(e.toString())\n            }\n        })\n    }, [client])\n    return {\n        isLoading,\n        allReports,\n        errorMsg\n    }\n}","/Users/alex/workspace/tksh/react-frontend/src/rpc/TkshServiceClientPb.ts",[],"/Users/alex/workspace/tksh/react-frontend/src/components/Snackbar.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/app/DashboardLayout.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/rpc/tksh_pb.js",[],["155","156"],"/Users/alex/workspace/tksh/react-frontend/src/components/Table/index.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/app/DashboardBar.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/components/Table/Table.tsx",["157","158"],"/Users/alex/workspace/tksh/react-frontend/src/components/Table/TooltipCell.tsx",["159"],"import { makeStyles } from '@material-ui/core'\nimport React, { CSSProperties } from 'react'\nimport { CellProps } from 'react-table'\n\nconst useStyles = makeStyles({\n  truncated: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n})\n\nexport const TooltipCell: React.FC<CellProps<any>> = ({ cell: { value }, column: { align = 'left' } }) => (\n  <Tooltip text={value} align={align} />\n)\n\ninterface Tooltip {\n  text: string\n  tooltip?: string\n  align: string\n}\n\nexport const Tooltip: React.FC<Tooltip> = ({ text, tooltip = text, align }) => {\n  const classes = useStyles({})\n  return (\n    <div className={classes.truncated} style={{ textAlign: align } as CSSProperties}>\n      <span title={tooltip}>{text}</span>\n    </div>\n  )\n}\n","/Users/alex/workspace/tksh/react-frontend/src/components/Table/TableToolbar.tsx",["160","161"],"import {\n  Button,\n  IconButton,\n  Theme,\n  Toolbar,\n  Tooltip,\n  createStyles,\n  makeStyles\n} from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport CreateIcon from '@material-ui/icons/CreateOutlined'\nimport DeleteIcon from '@material-ui/icons/DeleteOutline'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport ViewColumnsIcon from '@material-ui/icons/ViewColumn'\nimport classnames from 'classnames'\nimport React, {\n  MouseEvent,\n  MouseEventHandler,\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useState\n} from 'react'\nimport { TableInstance } from 'react-table'\n\nimport { TableMouseEventHandler } from '../../../shared/types/react-table-config'\nimport { ColumnHidePage } from './ColumnHidePage'\nimport { FilterPage } from './FilterPage'\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    toolbar: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    leftButtons: {},\n    rightButtons: {},\n    leftIcons: {\n      '&:first-of-type': {\n        marginLeft: -12\n      }\n    },\n    rightIcons: {\n      padding: 12,\n      marginTop: '-6px',\n      width: 48,\n      height: 48,\n      '&:last-of-type': {\n        marginRight: -12\n      }\n    }\n  })\n)\n\ntype InstanceActionButton<T extends object> = {\n  instance: TableInstance<T>\n  icon?: JSX.Element\n  onClick: TableMouseEventHandler\n  enabled?: (instance: TableInstance<T>) => boolean\n  label: string\n  variant?: 'right' | 'left'\n}\n\ntype ActionButton<T extends object> = {\n  icon?: JSX.Element\n  onClick: MouseEventHandler\n  enabled?: boolean\n  label: string\n  variant?: 'right' | 'left'\n}\n\nexport const InstanceLabeledActionButton = <T extends object>({\n  instance,\n  icon,\n  onClick,\n  label,\n  enabled = () => true\n}: InstanceActionButton<T>): ReactElement => {\n  return (\n    <Button\n      variant='contained'\n      color='primary'\n      onClick={onClick(instance)}\n      disabled={!enabled(instance)}\n    >\n      {icon}\n      {label}\n    </Button>\n  )\n}\n\nexport const LabeledActionButton = <T extends object>({\n  icon,\n  onClick,\n  label,\n  enabled = true\n}: ActionButton<T>): ReactElement => {\n  return (\n    <Button\n      variant='contained'\n      color='primary'\n      onClick={onClick}\n      disabled={!enabled}\n    >\n      {icon}\n      {label}\n    </Button>\n  )\n}\n\nexport const InstanceSmallIconActionButton = <T extends object>({\n  instance,\n  icon,\n  onClick,\n  label,\n  enabled = () => true,\n  variant\n}: InstanceActionButton<T>) => {\n  const classes = useStyles({})\n  return (\n    <Tooltip title={label} aria-label={label}>\n      <span>\n        <IconButton\n          className={classnames({\n            [classes.rightIcons]: variant === 'right',\n            [classes.leftIcons]: variant === 'left'\n          })}\n          onClick={onClick(instance)}\n          disabled={!enabled(instance)}\n        >\n          {icon}\n        </IconButton>\n      </span>\n    </Tooltip>\n  )\n}\n\nexport const SmallIconActionButton = <T extends object>({\n  icon,\n  onClick,\n  label,\n  enabled = true,\n  variant\n}: ActionButton<T>) => {\n  const classes = useStyles({})\n  return (\n    <Tooltip title={label} aria-label={label}>\n      <span>\n        <IconButton\n          className={classnames({\n            [classes.rightIcons]: variant === 'right',\n            [classes.leftIcons]: variant === 'left'\n          })}\n          onClick={onClick}\n          disabled={!enabled}\n        >\n          {icon}\n        </IconButton>\n      </span>\n    </Tooltip>\n  )\n}\n\ntype TableToolbar<T extends object> = {\n  instance: TableInstance<T>\n  onAdd?: TableMouseEventHandler\n  onDelete?: TableMouseEventHandler\n  onEdit?: TableMouseEventHandler\n}\n\nexport function TableToolbar<T extends object>({\n  instance,\n  onAdd,\n  onDelete,\n  onEdit\n}: PropsWithChildren<TableToolbar<T>>): ReactElement | null {\n  const { columns } = instance\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = useState<Element | undefined>(undefined)\n  const [columnsOpen, setColumnsOpen] = useState(false)\n  const [filterOpen, setFilterOpen] = useState(false)\n  const hideableColumns = columns.filter(\n    (column) => !(column.id === '_selector')\n  )\n\n  const handleColumnsClick = useCallback(\n    (event: MouseEvent) => {\n      setAnchorEl(event.currentTarget)\n      setColumnsOpen(true)\n    },\n    [setAnchorEl, setColumnsOpen]\n  )\n\n  const handleFilterClick = useCallback(\n    (event: MouseEvent) => {\n      setAnchorEl(event.currentTarget)\n      setFilterOpen(true)\n    },\n    [setAnchorEl, setFilterOpen]\n  )\n\n  const handleClose = useCallback(() => {\n    setColumnsOpen(false)\n    setFilterOpen(false)\n    setAnchorEl(undefined)\n  }, [])\n\n  // toolbar with add, edit, delete, filter/search column select.\n  return (\n    <Toolbar className={classes.toolbar}>\n      <div className={classes.leftButtons}>\n        {onAdd && (\n          <InstanceSmallIconActionButton<T>\n            instance={instance}\n            icon={<AddIcon />}\n            onClick={onAdd}\n            label='Add'\n            enabled={({ state }: TableInstance<T>) =>\n              !state.selectedRowIds ||\n              Object.keys(state.selectedRowIds).length === 0\n            }\n            variant='left'\n          />\n        )}\n        {onEdit && (\n          <InstanceSmallIconActionButton<T>\n            instance={instance}\n            icon={<CreateIcon />}\n            onClick={onEdit}\n            label='Edit'\n            enabled={({ state }: TableInstance<T>) =>\n              state.selectedRowIds &&\n              Object.keys(state.selectedRowIds).length === 1\n            }\n            variant='left'\n          />\n        )}\n        {onDelete && (\n          <InstanceSmallIconActionButton<T>\n            instance={instance}\n            icon={<DeleteIcon />}\n            onClick={onDelete}\n            label='Delete'\n            enabled={({ state }: TableInstance<T>) =>\n              state.selectedRowIds &&\n              Object.keys(state.selectedRowIds).length > 0\n            }\n            variant='left'\n          />\n        )}\n      </div>\n      <div className={classes.rightButtons}>\n        <ColumnHidePage<T>\n          instance={instance}\n          onClose={handleClose}\n          show={columnsOpen}\n          anchorEl={anchorEl}\n        />\n        <FilterPage<T>\n          instance={instance}\n          onClose={handleClose}\n          show={filterOpen}\n          anchorEl={anchorEl}\n        />\n        {hideableColumns.length > 1 && (\n          <SmallIconActionButton<T>\n            icon={<ViewColumnsIcon />}\n            onClick={handleColumnsClick}\n            label='Show / hide columns'\n            variant='right'\n          />\n        )}\n        <SmallIconActionButton<T>\n          icon={<FilterListIcon />}\n          onClick={handleFilterClick}\n          label='Filter by columns'\n          variant='right'\n        />\n      </div>\n    </Toolbar>\n  )\n}\n","/Users/alex/workspace/tksh/react-frontend/src/components/Table/TableStyles.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/components/Table/TablePagination.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/components/Table/ResizeHandle.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/components/Table/FilterChipBar.tsx",["162"],"import { Chip, createStyles, makeStyles } from '@material-ui/core'\nimport React, { useCallback } from 'react'\nimport { ColumnInstance, FilterValue, IdType, TableInstance } from 'react-table'\n\nconst useStyles = makeStyles(\n  createStyles({\n    filtersActiveLabel: {\n      color: '#998',\n      fontSize: '14px',\n      paddingRight: 10,\n    },\n    chipZone: {\n      padding: '18px 0 5px 10px',\n      width: '100%',\n    },\n    chipLabel: {\n      fontWeight: 500,\n      marginRight: 5,\n    },\n    filterChip: {\n      marginRight: 4,\n      color: '#222',\n    },\n  })\n)\n\ntype FilterChipBar<T extends object> = {\n  instance: TableInstance<T>\n}\n\nconst getFilterValue = (column: ColumnInstance<any>, filterValue: FilterValue) => {\n  switch (column.filter) {\n    case 'between':\n      const min = filterValue[0]\n      const max = filterValue[1]\n      return min ? (max ? `${min}-${max}` : `>=${min}`) : `<=${max}`\n  }\n  return filterValue\n}\n\nexport function FilterChipBar<T extends object>({ instance }: FilterChipBar<T>) {\n  const classes = useStyles({})\n  const {\n    allColumns,\n    setFilter,\n    state: { filters },\n  } = instance\n  const handleDelete = useCallback(\n    (id: string | number) => {\n      setFilter(id as IdType<T>, undefined)\n    },\n    [setFilter]\n  )\n\n  return Object.keys(filters).length > 0 ? (\n    <div className={classes.chipZone}>\n      <span className={classes.filtersActiveLabel}>Active filters:</span>\n      {filters &&\n        allColumns.map((column) => {\n          const filter = filters.find((f) => f.id === column.id)\n          const value = filter && filter.value\n          return (\n            value && (\n              <Chip\n                className={classes.filterChip}\n                key={column.id}\n                label={\n                  <>\n                    <span className={classes.chipLabel}>{column.render('Header')}: </span>\n                    {getFilterValue(column, value)}\n                  </>\n                }\n                onDelete={() => handleDelete(column.id)}\n                variant='outlined'\n              />\n            )\n          )\n        })}\n    </div>\n  ) : null\n}\n","/Users/alex/workspace/tksh/react-frontend/src/components/Table/DebugDump.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/components/Table/filters/index.ts",[],"/Users/alex/workspace/tksh/react-frontend/src/components/Table/FilterPage.tsx",["163"],"import { Button, Popover, Typography, createStyles, makeStyles } from '@material-ui/core'\nimport React, { FormEvent, ReactElement, useCallback } from 'react'\nimport { TableInstance } from 'react-table'\n\nconst useStyles = makeStyles(\n  createStyles({\n    columnsPopOver: {\n      padding: 24,\n    },\n    filtersResetButton: {\n      position: 'absolute',\n      top: 18,\n      right: 21,\n    },\n    popoverTitle: {\n      fontWeight: 500,\n      padding: '0 24px 24px 0',\n      textTransform: 'uppercase',\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(2, 218px)',\n      '@media (max-width: 600px)': {\n        gridTemplateColumns: 'repeat(1, 180px)',\n      },\n      gridColumnGap: 24,\n      gridRowGap: 24,\n    },\n    cell: {\n      width: '100%',\n      display: 'inline-flex',\n      flexDirection: 'column',\n    },\n    hidden: {\n      display: 'none',\n    },\n  })\n)\n\ntype FilterPage<T extends object> = {\n  instance: TableInstance<T>\n  anchorEl?: Element\n  onClose: () => void\n  show: boolean\n}\n\nexport function FilterPage<T extends object>({ instance, anchorEl, onClose, show }: FilterPage<T>): ReactElement {\n  const classes = useStyles({})\n  const { allColumns, setAllFilters } = instance\n\n  const onSubmit = useCallback(\n    (e: FormEvent<HTMLFormElement>) => {\n      e.preventDefault()\n      onClose()\n    },\n    [onClose]\n  )\n\n  const resetFilters = useCallback(() => {\n    setAllFilters([])\n  }, [setAllFilters])\n\n  return (\n    <div>\n      <Popover\n        anchorEl={anchorEl}\n        id={'popover-filters'}\n        onClose={onClose}\n        open={show}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <div className={classes.columnsPopOver}>\n          <Typography className={classes.popoverTitle}>Filters</Typography>\n          <form onSubmit={onSubmit}>\n            <Button className={classes.filtersResetButton} color='primary' onClick={resetFilters}>\n              Reset\n            </Button>\n            <div className={classes.grid}>\n              {allColumns\n                .filter((it) => it.canFilter)\n                .map((column) => (\n                  <div key={column.id} className={classes.cell}>\n                    {column.render('Filter')}\n                  </div>\n                ))}\n            </div>\n            <Button className={classes.hidden} type={'submit'}>\n              &nbsp;\n            </Button>\n          </form>\n        </div>\n      </Popover>\n    </div>\n  )\n}\n","/Users/alex/workspace/tksh/react-frontend/src/components/Table/ColumnHidePage.tsx",["164"],"import { Checkbox, FormControlLabel, Popover, Typography, createStyles, makeStyles } from '@material-ui/core'\nimport React, { ReactElement } from 'react'\nimport { TableInstance } from 'react-table'\n\nconst useStyles = makeStyles(\n  createStyles({\n    columnsPopOver: {\n      padding: 24,\n    },\n    popoverTitle: {\n      fontWeight: 500,\n      padding: '0 24px 24px 0',\n      textTransform: 'uppercase',\n    },\n    grid: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(2, 198px)',\n      '@media (max-width: 600px)': {\n        gridTemplateColumns: 'repeat(1, 160px)',\n      },\n      gridColumnGap: 6,\n      gridRowGap: 6,\n    },\n  })\n)\n\ntype ColumnHidePage<T extends object> = {\n  instance: TableInstance<T>\n  anchorEl?: Element\n  onClose: () => void\n  show: boolean\n}\n\nconst id = 'popover-column-hide'\n\nexport function ColumnHidePage<T extends object>({\n  instance,\n  anchorEl,\n  onClose,\n  show,\n}: ColumnHidePage<T>): ReactElement | null {\n  const classes = useStyles({})\n  const { allColumns, toggleHideColumn } = instance\n  const hideableColumns = allColumns.filter((column) => !(column.id === '_selector'))\n  const checkedCount = hideableColumns.reduce((acc, val) => acc + (val.isVisible ? 0 : 1), 0)\n\n  const onlyOneOptionLeft = checkedCount + 1 >= hideableColumns.length\n\n  return hideableColumns.length > 1 ? (\n    <div>\n      <Popover\n        anchorEl={anchorEl}\n        className={classes.columnsPopOver}\n        id={id}\n        onClose={onClose}\n        open={show}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <div className={classes.columnsPopOver}>\n          <Typography className={classes.popoverTitle}>Visible Columns</Typography>\n          <div className={classes.grid}>\n            {hideableColumns.map((column) => {\n              return (\n                <FormControlLabel\n                  key={column.id}\n                  control={<Checkbox value={`${column.id}`} disabled={column.isVisible && onlyOneOptionLeft} />}\n                  label={column.render('Header')}\n                  checked={column.isVisible}\n                  onChange={() => toggleHideColumn(column.id, column.isVisible)}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </Popover>\n    </div>\n  ) : null\n}\n","/Users/alex/workspace/tksh/react-frontend/src/components/Table/filters/numericFilter.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/components/Table/filters/fuzzyFilter.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/components/Loader/index.tsx",["165"],"import CircularProgress from '@material-ui/core/CircularProgress'\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignContent: 'center',\n      alignItems: 'center',\n      flex: '1 0 auto'\n    },\n    progress: {\n      margin: theme.spacing(2)\n    }\n  })\n)\n\ninterface Loader {\n  error?: boolean\n  retry?: (event: React.MouseEvent<HTMLElement>) => void\n  timedOut?: boolean\n  pastDelay?: boolean\n}\n\nexport const Loader: React.FC<Loader> = ({\n  error,\n  retry,\n  timedOut,\n  pastDelay\n}) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      {error && (\n        <div>\n          Error! <button onClick={retry}>Retry</button>\n        </div>\n      )}\n      {timedOut && (\n        <div>\n          Taking a long time... <button onClick={retry}>Retry</button>\n        </div>\n      )}\n      {pastDelay && <div>Loading...</div>}\n      <CircularProgress className={classes.progress} />\n    </div>\n  )\n}\n","/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/index.ts",[],"/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/object.ts",[],"/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/splitInitial.ts",["166"],"/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/validators.ts",[],"/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/useDebounce.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/useLocalStorage.tsx",[],"/Users/alex/workspace/tksh/react-frontend/src/shared/utilities/aggregators.tsx",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":5,"column":26,"nodeType":"173","messageId":"174","endLine":5,"endColumn":35},{"ruleId":"171","severity":1,"message":"175","line":30,"column":26,"nodeType":"173","messageId":"174","endLine":30,"endColumn":38},{"ruleId":"171","severity":1,"message":"176","line":46,"column":11,"nodeType":"173","messageId":"174","endLine":46,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":70,"column":25,"nodeType":"179","messageId":"180","endLine":70,"endColumn":27},{"ruleId":"171","severity":1,"message":"181","line":3,"column":9,"nodeType":"173","messageId":"174","endLine":3,"endColumn":18},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"182","line":89,"column":20,"nodeType":"173","messageId":"174","endLine":89,"endColumn":21},{"ruleId":"183","severity":1,"message":"184","line":177,"column":17,"nodeType":"173","messageId":"185","endLine":177,"endColumn":22},{"ruleId":"183","severity":1,"message":"186","line":23,"column":14,"nodeType":"173","messageId":"185","endLine":23,"endColumn":40},{"ruleId":"171","severity":1,"message":"182","line":64,"column":19,"nodeType":"173","messageId":"174","endLine":64,"endColumn":20},{"ruleId":"183","severity":1,"message":"187","line":171,"column":17,"nodeType":"173","messageId":"185","endLine":171,"endColumn":29},{"ruleId":"183","severity":1,"message":"188","line":41,"column":17,"nodeType":"173","messageId":"185","endLine":41,"endColumn":30},{"ruleId":"183","severity":1,"message":"189","line":47,"column":17,"nodeType":"173","messageId":"185","endLine":47,"endColumn":27},{"ruleId":"183","severity":1,"message":"190","line":36,"column":17,"nodeType":"173","messageId":"185","endLine":36,"endColumn":31},{"ruleId":"183","severity":1,"message":"191","line":28,"column":14,"nodeType":"173","messageId":"185","endLine":28,"endColumn":38},{"ruleId":"192","severity":1,"message":"193","line":1,"column":1,"nodeType":"194","endLine":6,"endColumn":14},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"@typescript-eslint/no-unused-vars","'useStyles' is defined but never used.","Identifier","unusedVar","'stringAmount' is assigned a value but never used.","'classes' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ReportAll' is defined but never used.","'T' is defined but never used.","@typescript-eslint/no-redeclare","'Table' is already defined.","redeclared","'Tooltip' is already defined.","'TableToolbar' is already defined.","'FilterChipBar' is already defined.","'FilterPage' is already defined.","'ColumnHidePage' is already defined.","'Loader' is already defined.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]